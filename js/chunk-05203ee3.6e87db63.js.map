{"version":3,"sources":["webpack:///./src/components/dataAnalysis/MCmodelMap.vue?2699","webpack:///./node_modules/_core-js@3.23.3@core-js/internals/dom-exception-constants.js","webpack:///./node_modules/_core-js@3.23.3@core-js/modules/web.dom-exception.stack.js","webpack:///./src/components/dataAnalysis/MCmodelMap.vue?b199","webpack:///src/components/dataAnalysis/MCmodelMap.vue","webpack:///./src/components/dataAnalysis/MCmodelMap.vue?ed8d","webpack:///./src/components/dataAnalysis/MCmodelMap.vue","webpack:///./node_modules/_core-js@3.23.3@core-js/internals/an-instance.js"],"names":["module","exports","IndexSizeError","s","c","m","DOMStringSizeError","HierarchyRequestError","WrongDocumentError","InvalidCharacterError","NoDataAllowedError","NoModificationAllowedError","NotFoundError","NotSupportedError","InUseAttributeError","InvalidStateError","SyntaxError","InvalidModificationError","NamespaceError","InvalidAccessError","ValidationError","TypeMismatchError","SecurityError","NetworkError","AbortError","URLMismatchError","QuotaExceededError","TimeoutError","InvalidNodeTypeError","DataCloneError","$","getBuiltIn","createPropertyDescriptor","defineProperty","f","hasOwn","anInstance","inheritIfRequired","normalizeStringArgument","DOMExceptionConstants","clearErrorStack","IS_PURE","DOM_EXCEPTION","Error","NativeDOMException","$DOMException","this","DOMExceptionPrototype","argumentsLength","arguments","length","message","undefined","name","that","error","stack","prototype","ERROR_HAS_STACK","DOM_EXCEPTION_HAS_STACK","FORCED_CONSTRUCTOR","global","constructor","forced","DOMException","PolyfilledDOMException","PolyfilledDOMExceptionPrototype","key","constant","constantName","render","_vm","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","attrs","data","mounted","colorList","sizeList","x","y","boxWidth","boxDepth","boxHeight","operatingSeriesData","brickSeriesData","ret","brickSeriesDataItem","value","label","show","color","itemStyle","opacity","type","bevelSize","bevelSmoothness","barSize","silent","shading","emphasis","tooltip","formatter","undo","redo","reset","save","load","normal","borderColor","borderWidth","alert","history","val","series","myChart","console","undoList","redoList","size","title","subtext","left","top","trigger","toolbox","feature","dataView","saveAsImage","xAxis3D","axisLabel","axisTick","splitLine","axisPointer","yAxis3D","zAxis3D","max","grid3D","light","main","alpha","beta","shadow","viewControl","distance","minDistance","grid","bottom","xAxis","yAxis","brickConfig","window","seriesIndex","dataIndex","component","isPrototypeOf","$TypeError","TypeError","it","Prototype"],"mappings":"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","file":"js/chunk-05203ee3.6e87db63.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MCmodelMap.vue?vue&type=style&index=0&id=633cc986&prod&scoped=true&lang=scss&\"","module.exports = {\n  IndexSizeError: { s: 'INDEX_SIZE_ERR', c: 1, m: 1 },\n  DOMStringSizeError: { s: 'DOMSTRING_SIZE_ERR', c: 2, m: 0 },\n  HierarchyRequestError: { s: 'HIERARCHY_REQUEST_ERR', c: 3, m: 1 },\n  WrongDocumentError: { s: 'WRONG_DOCUMENT_ERR', c: 4, m: 1 },\n  InvalidCharacterError: { s: 'INVALID_CHARACTER_ERR', c: 5, m: 1 },\n  NoDataAllowedError: { s: 'NO_DATA_ALLOWED_ERR', c: 6, m: 0 },\n  NoModificationAllowedError: { s: 'NO_MODIFICATION_ALLOWED_ERR', c: 7, m: 1 },\n  NotFoundError: { s: 'NOT_FOUND_ERR', c: 8, m: 1 },\n  NotSupportedError: { s: 'NOT_SUPPORTED_ERR', c: 9, m: 1 },\n  InUseAttributeError: { s: 'INUSE_ATTRIBUTE_ERR', c: 10, m: 1 },\n  InvalidStateError: { s: 'INVALID_STATE_ERR', c: 11, m: 1 },\n  SyntaxError: { s: 'SYNTAX_ERR', c: 12, m: 1 },\n  InvalidModificationError: { s: 'INVALID_MODIFICATION_ERR', c: 13, m: 1 },\n  NamespaceError: { s: 'NAMESPACE_ERR', c: 14, m: 1 },\n  InvalidAccessError: { s: 'INVALID_ACCESS_ERR', c: 15, m: 1 },\n  ValidationError: { s: 'VALIDATION_ERR', c: 16, m: 0 },\n  TypeMismatchError: { s: 'TYPE_MISMATCH_ERR', c: 17, m: 1 },\n  SecurityError: { s: 'SECURITY_ERR', c: 18, m: 1 },\n  NetworkError: { s: 'NETWORK_ERR', c: 19, m: 1 },\n  AbortError: { s: 'ABORT_ERR', c: 20, m: 1 },\n  URLMismatchError: { s: 'URL_MISMATCH_ERR', c: 21, m: 1 },\n  QuotaExceededError: { s: 'QUOTA_EXCEEDED_ERR', c: 22, m: 1 },\n  TimeoutError: { s: 'TIMEOUT_ERR', c: 23, m: 1 },\n  InvalidNodeTypeError: { s: 'INVALID_NODE_TYPE_ERR', c: 24, m: 1 },\n  DataCloneError: { s: 'DATA_CLONE_ERR', c: 25, m: 1 }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar defineProperty = require('../internals/object-define-property').f;\nvar hasOwn = require('../internals/has-own-property');\nvar anInstance = require('../internals/an-instance');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\nvar DOMExceptionConstants = require('../internals/dom-exception-constants');\nvar clearErrorStack = require('../internals/clear-error-stack');\nvar IS_PURE = require('../internals/is-pure');\n\nvar DOM_EXCEPTION = 'DOMException';\nvar Error = getBuiltIn('Error');\nvar NativeDOMException = getBuiltIn(DOM_EXCEPTION);\n\nvar $DOMException = function DOMException() {\n  anInstance(this, DOMExceptionPrototype);\n  var argumentsLength = arguments.length;\n  var message = normalizeStringArgument(argumentsLength < 1 ? undefined : arguments[0]);\n  var name = normalizeStringArgument(argumentsLength < 2 ? undefined : arguments[1], 'Error');\n  var that = new NativeDOMException(message, name);\n  var error = Error(message);\n  error.name = DOM_EXCEPTION;\n  defineProperty(that, 'stack', createPropertyDescriptor(1, clearErrorStack(error.stack, 1)));\n  inheritIfRequired(that, this, $DOMException);\n  return that;\n};\n\nvar DOMExceptionPrototype = $DOMException.prototype = NativeDOMException.prototype;\n\nvar ERROR_HAS_STACK = 'stack' in Error(DOM_EXCEPTION);\nvar DOM_EXCEPTION_HAS_STACK = 'stack' in new NativeDOMException(1, 2);\nvar FORCED_CONSTRUCTOR = ERROR_HAS_STACK && !DOM_EXCEPTION_HAS_STACK;\n\n// `DOMException` constructor patch for `.stack` where it's required\n// https://webidl.spec.whatwg.org/#es-DOMException-specialness\n$({ global: true, constructor: true, forced: IS_PURE || FORCED_CONSTRUCTOR }, { // TODO: fix export logic\n  DOMException: FORCED_CONSTRUCTOR ? $DOMException : NativeDOMException\n});\n\nvar PolyfilledDOMException = getBuiltIn(DOM_EXCEPTION);\nvar PolyfilledDOMExceptionPrototype = PolyfilledDOMException.prototype;\n\nif (PolyfilledDOMExceptionPrototype.constructor !== PolyfilledDOMException) {\n  if (!IS_PURE) {\n    defineProperty(PolyfilledDOMExceptionPrototype, 'constructor', createPropertyDescriptor(1, PolyfilledDOMException));\n  }\n\n  for (var key in DOMExceptionConstants) if (hasOwn(DOMExceptionConstants, key)) {\n    var constant = DOMExceptionConstants[key];\n    var constantName = constant.s;\n    if (!hasOwn(PolyfilledDOMException, constantName)) {\n      defineProperty(PolyfilledDOMException, constantName, createPropertyDescriptor(6, constant.c));\n    }\n  }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"McMap\"},[_c('div',{attrs:{\"id\":\"main\"}})])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"McMap\">\r\n    <div id=\"main\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MCdata from '@/assets/MCdata.json'\r\nexport default {\r\n  data(){return{}},\r\n  mounted(){\r\n    var myChart=this.$echarts.init(document.getElementById('main'));\r\n    /**************************\r\n    【 配置区 】 :\r\n    *************************\r\n    配置游戏区正方体边长（砖块数）*/\r\n    var xLength = 20 ;\r\n    /* 配置上次导出（save）的游戏数据，没有请填空字符串 */\r\n    //let loadData = '' ;\r\n    let loadData=MCdata;\r\n\r\n    /* 数据是否自动导入 */\r\n    let autoLoad = true ;\r\n\r\n    /* 菜单配置（颜色按钮、尺寸按钮） */\r\n    let menuConfig = {\r\n      colorList: ['green', 'yellow', 'SaddleBrown','DarkGray','blue'],\r\n      sizeList: [0.25, 0.5, 1, 2, 3]\r\n    };\r\n\r\n\r\n    /*\r\n    *************************\r\n    【 generateData 函数说明 】 :\r\n    *************************\r\n        根据传入的边长，生成游戏数据————支撑一个正方体的游戏区域。\r\n    生成的数据包括：\r\n    {\r\n        x: ['x_1', 'x_2', ..., 'x_n'],\r\n        y: ['y_1', 'y_2', ..., 'y_n'],\r\n        boxWidth: length,\r\n        boxDepth: length,\r\n        boxHeight: length,\r\n        operatingSeriesData: [[0, 0, 1], [0, 1, 1], ..., [n, n, 1]],\r\n        brickSeriesData: [[{value:[0, 0, 0]}, {value:[0, 1, 0]}, ..., {value:[n, n, 0]}],\r\n                        [{value:[0, 0, 0]}, {value:[0, 1, 0]}, ..., {value:[n, n, 0]}], ... ]\r\n    }\r\n\r\n    其中：\r\n        1、x、y 用于 xAxis3D、yAxis3D 的 data；\r\n        2、boxWidth、boxDepth、boxHeight 用于 grid3D 的相应参数；\r\n        3、operatingSeriesData 用于 bar3D，实现堆砖块（积木）的操作层，监听鼠标点击\r\n            事件 myChart.on('click', params => {})\r\n        4、brickSeriesData 同样用于 bar3D，实现堆积完成的砖块（积木）\r\n\r\n\r\n        注: 游戏数据可以通过 heatmap 实现的按钮导出，下次赋值给 loadData 变量，实现\r\n            数据的载入，从而继续游戏。\r\n\r\n    *************************\r\n    【 generateMenuData 函数说明 】 :\r\n    *************************\r\n        根据传入的颜色列表、尺寸列表（砖块高度），生成菜单数据（heatmap 的 data），\r\n    用于实现右上角的功能菜单。\r\n\r\n        注: 第一行是操作菜单，第二行是尺寸菜单，第三行是颜色菜单。\r\n\r\n    *************************\r\n    【 generateSeries 函数说明 】 :\r\n    *************************\r\n        根据传入的数据，生成 option.series 用于渲染游戏数据————bar3D\r\n\r\n        注: 可以传入 generateData 生成的 data，也可以载入 loadData，后面用了一个\r\n            三元表达式做了判断，如果 autoLoad 为真，且 loadData 非空字符串，才\r\n            执行 generateData 函数。\r\n\r\n    *************************\r\n    【 undo、redo 函数说明 】 :\r\n    *************************\r\n        【undoList/redoList 记录格式】\r\n        {\r\n            seriesIndex: i,\r\n            dataIndex: params.data[0] * xLength + params.data[1],\r\n            brickConfig: JSON.parse(JSON.stringify(brickConfig))\r\n        }\r\n\r\n        【undo】\r\n        撤销上一次操作\r\n\r\n        注1: 使用 history.undoList 记录操作历史，undo 就是将 data[i]，\r\n            还原成{value: [i, j, 0]}\r\n        注2: 还原的同时，将对应 history.undoList 记录删除，存入 history.redoList\r\n\r\n\r\n        【redo】\r\n        重做上一次撤销\r\n\r\n        注1: 使用 history.redoList 记录操作历史，redo 就是将 data[i]，\r\n            重新修改成 data[i].value[2] > 0 的，包含 itemStyle 的过程。\r\n        注2: 重做的同时，将对应 history.redoList 记录删除，重新存入 history.undoList\r\n\r\n    *************************/\r\n\r\n    let generateData = (length) => {\r\n      let ret = {\r\n        x: [],\r\n        y: [],\r\n        boxWidth: length,\r\n        boxDepth: length,\r\n        boxHeight: length,\r\n        operatingSeriesData: [],\r\n        brickSeriesData: []\r\n      };\r\n\r\n      let brickSeriesDataItem = [];\r\n\r\n      for (let i = 0; i < length; i++) {\r\n        ret.x.push('x_' + i);\r\n        ret.y.push('y_' + i);\r\n\r\n        for (let j = 0; j < length; j++) {\r\n          ret.operatingSeriesData.push([i, j, 1]);\r\n          brickSeriesDataItem.push({\r\n            value: [i, j, 0]\r\n          });\r\n        }\r\n\r\n      }\r\n\r\n      for (let i = 0; i < length; i++) {\r\n        ret.brickSeriesData[i] = JSON.parse(JSON.stringify(brickSeriesDataItem));\r\n      }\r\n\r\n      return ret;\r\n    };\r\n\r\n    let generateMenuData = (colorList, sizeList) => {\r\n\r\n      let ret = [];\r\n\r\n\r\n      for (let i = 0; i < sizeList.length; i++) {\r\n\r\n        ret.push({\r\n          value: [i, 1, sizeList[i]],\r\n          name: 'size',\r\n          label: {\r\n            show: true,\r\n            color: 'black'\r\n          },\r\n          itemStyle: {\r\n            color: 'gray'\r\n          }\r\n        });\r\n      }\r\n\r\n      for (let i = 0; i < colorList.length + 1; i++) {\r\n\r\n        if (i === colorList.length) {\r\n\r\n          ret.push({\r\n            value: [i, 0, 1],\r\n            name: 'empty',\r\n            label: {\r\n              show: true,\r\n              color: 'black'\r\n            },\r\n            itemStyle: {\r\n              color: '#FFF',\r\n              opacity: 0.1\r\n            }\r\n          });\r\n          continue;\r\n        }\r\n\r\n        ret.push({\r\n          value: [i, 0, 1],\r\n          name: 'color',\r\n          label: {\r\n            show: true,\r\n            color: 'black'\r\n          },\r\n          itemStyle: {\r\n            color: colorList[i]\r\n          }\r\n        });\r\n      }\r\n\r\n      ret.push({\r\n        value: [0, 2, 1],\r\n        name: 'undo',\r\n        label: {\r\n          show: true,\r\n          color: 'black'\r\n        },\r\n        itemStyle: {\r\n          color: 'gray'\r\n        }\r\n      }, {\r\n        value: [1, 2, 1],\r\n        name: 'redo',\r\n        label: {\r\n          show: true,\r\n          color: 'black'\r\n        },\r\n        itemStyle: {\r\n          color: 'gray'\r\n        }\r\n      }, {\r\n        value: [2, 2, 1],\r\n        name: 'reset',\r\n        label: {\r\n          show: true,\r\n          color: 'black'\r\n        },\r\n        itemStyle: {\r\n          color: 'gray'\r\n        }\r\n      }, {\r\n        value: [3, 2, 1],\r\n        name: 'save',\r\n        label: {\r\n          show: true,\r\n          color: 'black'\r\n        },\r\n        itemStyle: {\r\n          color: 'gray'\r\n        }\r\n      }, {\r\n        value: [4, 2, 1],\r\n        name: 'load',\r\n        label: {\r\n          show: true,\r\n          color: 'black'\r\n        },\r\n        itemStyle: {\r\n          color: 'gray'\r\n        }\r\n      });\r\n\r\n      return ret;\r\n    };\r\n\r\n    let generateSeries = (src) => {\r\n      let  ret = [];\r\n\r\n      for (let i = 0; i < src.boxHeight; i++) {\r\n\r\n        ret.push({\r\n          type: 'bar3D',\r\n          name: 'bricks',\r\n          color: 'LawnGreen',\r\n          data: src.brickSeriesData[i],\r\n          bevelSize: i === 0 ? 0 : 0.2,\r\n          bevelSmoothness: i === 0 ? 0 : 2,\r\n          barSize: [1, 1],\r\n          stack: 'stack',\r\n          silent: true,\r\n          shading: 'lambert',\r\n          itemStyle: {\r\n            opacity: i === 0? 1: 0\r\n          }\r\n        });\r\n\r\n\r\n      }\r\n      ret.push({\r\n        type: 'bar3D',\r\n        name: 'operatingSeries',\r\n        data: src.operatingSeriesData,\r\n        barSize: [1, 1],\r\n        stack: 'stack',\r\n        color: '#FFA',\r\n        shading: 'lambert',\r\n        label: {\r\n          emphasis: {\r\n            show: false\r\n          }\r\n\r\n        },\r\n        itemStyle: {\r\n          opacity: 0.01\r\n        },\r\n        emphasis: {\r\n          itemStyle: {\r\n            opacity: 1\r\n          }\r\n        }\r\n      });\r\n\r\n      ret.push({\r\n        type: 'heatmap',\r\n        name: 'menu',\r\n        tooltip: {\r\n          formatter: params => {\r\n            if (params.name === 'color') {\r\n              return `点击更换“积木”颜色为 ${params.color}`;\r\n            }\r\n\r\n            if (params.name === 'size') {\r\n              return `点击更换“积木”高度为 ${params.value[2]}`;\r\n            }\r\n\r\n            return {undo: '撤销', redo: '重做', reset: '清空', save: '导出游戏数据，<br />供下次赋值给 loadData 使用', load: '功能开发中…' }[params.name];\r\n\r\n          }\r\n        },\r\n        label: {\r\n          normal:{\r\n            formatter: params => {\r\n\r\n              if (params.name === 'color') {\r\n                return params.color;\r\n              }\r\n\r\n              if (params.name === 'size') {\r\n                return params.value[2];\r\n              }\r\n\r\n              return params.name;\r\n\r\n            }\r\n          }\r\n        },\r\n        itemStyle: {\r\n          borderColor: '#AAA',\r\n          borderWidth: 4\r\n        },\r\n        data: generateMenuData(menuConfig.colorList, menuConfig.sizeList)\r\n      });\r\n\r\n\r\n      return ret;\r\n    };\r\n\r\n// 撤销\r\n    let undo = () => {\r\n      if (history.undoList.length === 0) {\r\n        alert('操作历史记录为空，撤销未执行…');\r\n        return console.log('操作历史记录为空，撤销未执行…');\r\n      }\r\n\r\n      // undoList 最后一条记录“剪切”到 redoList\r\n      let historyObj = history.undoList.pop();\r\n      history.redoList.push(historyObj);\r\n\r\n      // 将上一步操作/重做的 series[seriesIndex].data[dataIndex] 重置为初始值\r\n      let val = series[historyObj.seriesIndex].data[historyObj.dataIndex].value;\r\n      val[2] = 0;\r\n      series[historyObj.seriesIndex].data[historyObj.dataIndex] = {value: val};\r\n\r\n      myChart.setOption({series: series});\r\n      console.log('撤销成功');\r\n    };\r\n\r\n// 重做\r\n    let redo = () => {\r\n      if (history.redoList.length === 0) {\r\n        alert('操作历史记录为空，重做未执行…');\r\n        return console.log('操作历史记录为空，重做未执行…');\r\n      }\r\n\r\n      // redoList 最后一条记录“剪切”到 undoList\r\n      let historyObj = history.redoList.pop();\r\n      history.undoList.push(historyObj);\r\n\r\n      // 将上一步重置的 series[seriesIndex].data[dataIndex] 重设为撤销前的状态\r\n      series[historyObj.seriesIndex].data[historyObj.dataIndex].value[2] = historyObj.brickConfig.size;\r\n      series[historyObj.seriesIndex].data[historyObj.dataIndex].itemStyle = {\r\n        color: historyObj.brickConfig.color,\r\n        opacity: historyObj.brickConfig.opacity\r\n      };\r\n      myChart.setOption({series: series});\r\n      console.log('重做成功');\r\n    };\r\n\r\n// 撤销/重做 所用的操作历史记录\r\n    let history = {\r\n      undoList: [],\r\n      redoList: []\r\n    };\r\n\r\n// 下一个砖块的样式\r\n    let brickConfig = {\r\n      color: menuConfig.colorList[0],\r\n      size: menuConfig.sizeList[0],\r\n      opacity: 1\r\n    };\r\n\r\n// 如设置自动载入，而且用于载入的数据非空（空字符串），那么不再重新生成新数据\r\n    var data = autoLoad && loadData !== '' ? loadData : generateData(xLength);\r\n\r\n// 通过数据生成 series 配置\r\n    let series = generateSeries(data);\r\n\r\n// 配置 option\r\n    let option = {\r\n      title: {\r\n        subtext: `当前颜色：${brickConfig.color}\\n当前尺寸：${brickConfig.size}\\n当前透明度：${brickConfig.opacity}`,\r\n        left: '70%',\r\n        top: '22%'\r\n      },\r\n      tooltip: {\r\n        trigger: 'item'\r\n      },\r\n      toolbox: {\r\n        feature: {\r\n          dataView: {},\r\n          saveAsImage: {}\r\n        }\r\n      },\r\n      xAxis3D: {\r\n        type: 'category',\r\n        show: false,\r\n        axisLabel: {\r\n          show: false\r\n        },\r\n        axisTick: {\r\n          show: false\r\n        },\r\n        splitLine: {\r\n          show: false\r\n        },\r\n        axisPointer: {\r\n          show: false\r\n        },\r\n        data: data.x\r\n      },\r\n      yAxis3D: {\r\n        type: 'category',\r\n        show: false,\r\n        axisLabel: {\r\n          show: false\r\n        },\r\n        axisTick: {\r\n          show: false\r\n        },\r\n        splitLine: {\r\n          show: false\r\n        },\r\n        axisPointer: {\r\n          show: false\r\n        },\r\n        data: data.y\r\n      },\r\n      zAxis3D: {\r\n        show: false,\r\n        max: data.boxHeight,\r\n        axisLabel: {\r\n          show: false\r\n        },\r\n        axisTick: {\r\n          show: false\r\n        },\r\n        splitLine: {\r\n          show: false\r\n        },\r\n        axisPointer: {\r\n          show: false\r\n        },\r\n        type: 'value'\r\n      },\r\n      grid3D: {\r\n        show: false,\r\n        boxWidth: data.boxWidth,\r\n        boxDepth: data.boxDepth,\r\n        boxHeight: data.boxHeight,\r\n        light: {\r\n          main: {\r\n            alpha: 60,\r\n            beta: 210,\r\n            shadow: true\r\n          }\r\n        },\r\n        viewControl: {\r\n          alpha: 0,\r\n          beta: 210,\r\n          distance: 40,\r\n          minDistance: 0\r\n        },\r\n\r\n      },\r\n      grid: {\r\n        top: '10%',\r\n        left: '70%',\r\n        bottom: '80%'\r\n      },\r\n      xAxis: {\r\n        show:false,\r\n        type: 'category'\r\n      },\r\n      yAxis: {\r\n        show: false,\r\n      },\r\n      series: series,\r\n    };\r\n\r\n// 一个 utf8_to_b64\r\n    let base64 = (s) => {\r\n      return window.btoa(unescape(encodeURIComponent(s)));\r\n    };\r\n\r\n//myChart.setOption(option);\r\n\r\n// 监听鼠标点击事件\r\n    myChart.on('click', params => {\r\n\r\n      // 菜单操作处理\r\n      if (params.seriesName === 'menu') {\r\n        if (params.name === 'color') {\r\n          brickConfig.color = params.color;\r\n          brickConfig.opacity = 1;\r\n          myChart.setOption({title:{subtext: `当前颜色：${brickConfig.color}\\n当前尺寸：${brickConfig.size}\\n当前透明度：${brickConfig.opacity}`}});\r\n          return console.log(`砖块颜色更换为${params.color}`);\r\n        }\r\n\r\n        if (params.name === 'empty') {\r\n          brickConfig.color = params.color;\r\n          brickConfig.opacity = 0;\r\n          myChart.setOption({title:{subtext: `当前颜色：${brickConfig.color}\\n当前尺寸：${brickConfig.size}\\n当前透明度：${brickConfig.opacity}`}});\r\n          return console.log(`砖块颜色更换为透明`);\r\n        }\r\n\r\n        if (params.name === 'size') {\r\n          brickConfig.size = params.value[2];\r\n          myChart.setOption({title:{subtext: `当前颜色：${brickConfig.color}\\n当前尺寸：${brickConfig.size}\\n当前透明度：${brickConfig.opacity}`}});\r\n          return console.log(`砖块 size 更换为${params.value[2]}`);\r\n        }\r\n\r\n        if (params.name === 'load') {\r\n          // load\r\n          alert('开发中…');\r\n          return console.log('开发中…');\r\n        }\r\n\r\n        if (params.name === 'reset') {\r\n          data = generateData(xLength);\r\n          series = generateSeries(data);\r\n          myChart.setOption({series: series});\r\n          return console.log('清空数据成功');\r\n        }\r\n\r\n\r\n        if (params.name === 'save') {\r\n          let uri = 'data:application/json;base64,';\r\n          //console.log(data);\r\n          window.location.href = uri + base64(JSON.stringify(data));\r\n          return console.log('导出数据成功');\r\n        }\r\n\r\n        if (params.name === 'undo') {\r\n          return undo();\r\n        }\r\n\r\n        if (params.name === 'redo') {\r\n          return redo();\r\n        }\r\n      }\r\n\r\n      //alert(`正在 (${params.data[0]}, ${params.data[1]}) 处堆积一个砖块`);\r\n\r\n      // 堆积木（砖块）操作处理\r\n      for (let i in series) {\r\n        if (series[i].name === 'bricks' && series[i].data[params.data[0] * xLength + params.data[1]].value[2] === 0) {\r\n          series[i].data[params.data[0] * xLength + params.data[1]].value[2] = brickConfig.size;\r\n          series[i].data[params.data[0] * xLength + params.data[1]].itemStyle = {\r\n            color: brickConfig.color,\r\n            opacity: brickConfig.opacity\r\n          };\r\n\r\n          history.undoList.push({\r\n            seriesIndex: i,\r\n            dataIndex: params.data[0] * xLength + params.data[1],\r\n            brickConfig: JSON.parse(JSON.stringify(brickConfig)) // 深拷贝\r\n          });\r\n\r\n          history.redoList = [];\r\n\r\n          return myChart.setOption({\r\n            series: series\r\n          });\r\n\r\n        }\r\n      }\r\n    });\r\n    myChart.setOption(option);\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.McMap{\r\n  width: 100%;\r\n  #main{\r\n    width: 100%;\r\n    height: 500px;\r\n  }\r\n}\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MCmodelMap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MCmodelMap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MCmodelMap.vue?vue&type=template&id=633cc986&scoped=true&\"\nimport script from \"./MCmodelMap.vue?vue&type=script&lang=js&\"\nexport * from \"./MCmodelMap.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MCmodelMap.vue?vue&type=style&index=0&id=633cc986&prod&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"633cc986\",\n  null\n  \n)\n\nexport default component.exports","var isPrototypeOf = require('../internals/object-is-prototype-of');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (it, Prototype) {\n  if (isPrototypeOf(Prototype, it)) return it;\n  throw $TypeError('Incorrect invocation');\n};\n"],"sourceRoot":""}